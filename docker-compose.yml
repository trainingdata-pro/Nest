services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: bash -c "python manage.py migrate --noinput && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/home/assessors/backend/src/static
    networks:
      - default_network
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - postgres
      - celery

  postgres:
    container_name: postgres
    image: postgres:14-alpine3.18
    env_file:
      - './backend/.env'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - default_network

  redis:
    container_name: redis
    image: redis
    volumes:
      - redis_data:/data
    networks:
      - default_network

  celery:
    container_name: celery
    build: ./backend
    env_file:
      - './backend/.env'
    command: bash -c "celery -A core.celery worker --loglevel=info"
    depends_on:
      - redis
    networks:
      - default_network

  celery-beat:
    container_name: celery-beat
    build: ./backend
    env_file:
      - './backend/.env'
    command: bash -c "celery -A core.celery beat --loglevel=info"
    depends_on:
      - redis
    networks:
      - default_network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
       - postgres-data:/var/lib/postgresql/data
    networks:
      - default_network

volumes:
  static_volume:
  redis_data:
  postgres-data:

networks:
  default_network: