services:
  api:
    container_name: api
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - './backend/.env'
    command: bash -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend/src/:/backend/src
    networks:
      - dev_network
    depends_on:
      - postgres
      - celery

  postgres:
    container_name: postgres
    image: postgres:14-alpine3.18
    env_file:
      - './backend/.env'
    expose:
      - 5432
    volumes:
      - ./storage/postgres-data:/var/lib/postgresql/data
    networks:
      - dev_network

  redis:
    container_name: redis
    image: redis
    volumes:
      - redis_data:/data
    networks:
      - dev_network

  celery:
    container_name: celery
    build: ./backend
    env_file:
      - './backend/.env'
    command: bash -c "celery -A core.celery worker --loglevel=info"
    depends_on:
      - redis
    networks:
      - dev_network

  celery-beat:
    container_name: celery-beat
    build: ./backend
    env_file:
      - './backend/.env'
    command: bash -c "celery -A core.celery beat --loglevel=info"
    networks:
      - dev_network
    depends_on:
      - redis

volumes:
  redis_data:

networks:
  dev_network: