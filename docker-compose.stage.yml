services:
  backend:
    container_name: backend-nest-stage
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      - APP_CONFIG=prod
    command: bash -c "python manage.py migrate --noinput && gunicorn config.wsgi:application -c ../gunicorn.conf.py --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/home/assessors/backend/src/static
      - media_volume:/home/assessors/backend/src/media
      - ./backend/logging:/home/assessors/backend/logging
      - ./backend/db_merge:/home/assessors/backend/db_merge
    expose:
      - 8000
    networks:
      - default_network
    depends_on:
      - postgres
      - celery

  postgres:
    container_name: postgres-nest-stage
    image: postgres:14-alpine3.18
    env_file:
      - ./backend/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - default_network

  redis:
    container_name: redis-nest-stage
    image: redis
    volumes:
      - redis_data:/var/lib/redis
    networks:
      - default_network

  celery:
    container_name: celery-nest-stage
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      - APP_CONFIG=prod
    command: bash -c "celery -A config.celery worker --loglevel=info --logfile=../logging/celery.log"
    volumes:
      - media_volume:/home/assessors/backend/src/media
      - ./backend/logging:/home/assessors/backend/logging
    depends_on:
      - redis
    networks:
      - default_network

  celery-beat:
    container_name: celery-beat-nest-stage
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      - APP_CONFIG=prod
    command: bash -c "celery -A config.celery beat --loglevel=info --logfile=../logging/celery-beat.log"
    volumes:
      - ./backend/logging:/home/assessors/backend/logging
    depends_on:
      - redis
    networks:
      - default_network

  frontend:
    container_name: frontend-nest-stage
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
       - static_volume:/home/assessors/backend/src/static
    networks:
      - default_network

volumes:
  static_volume:
  redis_data:
  postgres-data:
  media_volume:

networks:
  default_network: